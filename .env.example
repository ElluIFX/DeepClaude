# 客户端请求时允许通过请求的 API KEY，无需在当前环境变量当中手动添加 Bearer，目前只支持一个，未来可以升级为数组/toml/yaml 或专门的管理工具
ALLOW_API_KEY=your-api-key-here

# 服务端跨域配置
# 允许访问的域名，多个域名使用逗号分隔(中间不能有空格)，例如：http://localhost:3000,https://chat.example.com
# 如果允许所有域名访问，则填写 *
ALLOW_ORIGINS=*

# 前级 API 设置
REASONING_API_KEY=your-reasoning-api-key
REASONING_API_URL=https://api.example.com/v1/chat/completions
REASONING_MODEL=deepseek-r1

# 是否使用原生推理格式(false: <think>...</think> 格式, true: DeepSeek 官方API推理格式)
IS_ORIGIN_REASONING=false

# 后级 API 设置
ANSWERING_API_KEY=your-answering-api-key
ANSWERING_API_URL=https://api.example.com/v1/chat/completions
ANSWERING_MODEL=claude-3-5-sonnet-20241022

# Web 搜索模型
WEB_SEARCH_API_KEY=your-web-search-api-key
WEB_SEARCH_API_URL=https://api.example.com/v1/chat/completions
WEB_SEARCH_MODEL=claude-3-5-haiku-20241022

# Web 搜索 Token (Search1API)
WEB_SEARCH_TOKEN=your-web-search-token

# Web 搜索最大结果数
WEB_SEARCH_MAX_RESULTS=12

# Web 搜索爬取结果数
WEB_SEARCH_CRAWL_RESULTS=4

# 日志配置
# 可选值：DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# 是否禁用标准输出
NO_STDERR=false
